#!/bin/bash

DEFAULT_DPI=96
## try DPI from profile
printf "%s\n" "Trying to get DPI from \"${AUTORANDR_PROFILE_FOLDER}/dpi\""
DPI="$(cat "${AUTORANDR_PROFILE_FOLDER}/dpi" 2>/dev/null | head -n 1 | grep -o '[0-9]\+')"
## try dpi from primary monitor
if [ -z "$DPI" ]
then
     printf "%s\n%s\n" "No DPI value in profile \"$AUTORANDR_CURRENT_PROFILE\"" "Trying to calculate from primary monitor"
     DPX="$(xrandr -q | grep ' primary ' | grep -o ' [0-9]\+x' | grep -o '[0-9]\+')"
     DMM="$(xrandr -q | grep ' primary ' | grep -o ') [0-9]\+mm' | grep -o '[0-9]\+')"

     if [ -n "$DPX" -a -n "$DMM" ]
     then
          DPI="$(python -c "print( int( $DPX / ( $DMM * 0.039370079 ) ) )" )"
     fi
fi

if [ -z "$DPI" ]
then
     printf "%s\n%s\n" "Could not calculate DPI of primary monitor" "Using default"
     DPI=$DEFAULT_DPI
fi
printf "%s\n" "Resulting DPI: $DPI"
## apply DPI to xrandr
xrandr --dpi "$DPI"
## sync dpi to xrdb
printf "%s\n" "Xft.dpi: $DPI" | xrdb -merge
## sync dpi to fontconfig
mkdir -p "${XDG_CONFIG_HOME:-$HOME/.config}/fontconfig/conf.d"
cat > "${XDG_CONFIG_HOME:-$HOME/.config}/fontconfig/conf.d/90-xrandr-sync-dpi.conf" << EOF
<?xml version="1.0"?>
<!DOCTYPE fontconfig SYSTEM "fonts.dtd">
<!-- Generated by autorandr postswitch script, do not edit. -->
<fontconfig>
  <match target="pattern">
    <edit name="dpi" mode="assign"><double>$DPI</double></edit>
  </match>
</fontconfig>
EOF

{{- if eq .chezmoi.hostname "laptop" }}
if [[ "$AUTORANDR_CURRENT_PROFILE" == "mobile" ]]; then
    bspc monitor eDP-1 -d web term 3 4 5 6 mail calendar spotify slack
else
    bspc monitor HDMI-1 -d web term 3 4 5 6
    bspc monitor eDP-1 -d mail calendar spotify slack
fi
{{- end}}


{{- if eq .chezmoi.hostname "workstation" }}
    bspc monitor DP-4 -d web term mail calendar 5 6
    bspc monitor DVI-D-0 -d 7 8 discord slack
{{- end}}

window_ids=$(bspc query -N -n .window)

declare -A positions
positions=( ["Slack"]="slack" ["Spotify"]="spotify" ["firefox"]="web" ["Alacritty"]=term )

for id in $window_ids
do
    echo $id
    class=$(xprop -id $id | grep "WM_CLASS(STRING)" | awk '{print $4}' | tr -d '"')
    echo $class
    desktop=${positions["$class"]}
    echo $desktop
    bspc node $id -d $desktop;
done


feh --bg-fill ~/Pictures/Wallpapers/ged014.jpg
~/.config/polybar/launch.sh

notify-send "Loaded profile $AUTORANDR_CURRENT_PROFILE"
